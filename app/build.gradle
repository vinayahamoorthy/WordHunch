apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'http://maven.gameanalytics.com/release' }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.daksh.wordhunch"
        minSdkVersion 19
        targetSdkVersion 25
        //ABI Version code naming convention
        // x yy zz nnn
        //Architecture | API Level | Screen Size | App version
        versionCode 2
        versionName "v0.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable false
            reset()
            include 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64', 'mips', 'mips64'
            universalApk false
        }
    }
    project.ext.versionCodes = [
            'armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3,
            'mips'   : 5, 'mips64': 6, 'x86': 8, 'x86_64': 9
    ]
    android.applicationVariants.all {
        variant ->
            variant.outputs.each {
                output ->
                    output.versionCodeOverride =
                            project.ext.versionCodes.get(output.getFilter(
                                    com.android.build.OutputFile.ABI), 0) * 10000000 + android.defaultConfig.versionCode
            }
    }
    dexOptions {
        preDexLibraries = false
    }
    packagingOptions {
        exclude 'META-INF/MANIFEST.MF'
    }
}
apt {
    arguments {
        eventBusIndex "com.daksh.wordhunch.WordHunchBusIndex"
    }
}

dependencies {
//    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'

    //Google stuff
    compile ('com.android.support:appcompat-v7:25.3.1') {
        exclude group: 'com.google.firebase'
    }
    compile 'com.android.support:support-annotations:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:support-v4:25.3.1'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.google.android.gms:play-services-games:10.2.4'
    compile 'com.google.android.gms:play-services-base:10.2.4'
    compile 'com.google.android.gms:play-services-gcm:10.2.4'
    compile 'com.android.support:customtabs:25.3.1'

    //Fabric
    compile('com.crashlytics.sdk.android:crashlytics:2.6.7@aar') {
        transitive = true;
    }
    compile('com.gameanalytics.sdk:gameanalytics-android:3.4.17@aar') {
        transitive = true;
    }
    compile('io.fabric.sdk.android:fabric:1.3.10@aar') {
        transitive = true;
    }

    //Networking
    //Retrofit base library
    compile ('com.squareup.retrofit2:retrofit:2.0.2')

    //Retrofit plugins
    compile ('com.squareup.retrofit2:converter-gson:2.0.2')
    compile ('com.squareup.okhttp3:logging-interceptor:3.0.0-RC1')

    //timer
    compile 'com.github.krtkush:LinearTimer:v2.1.0'

    //UI
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    apt 'com.jakewharton:butterknife-compiler:8.5.1'

    //Database
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'net.zetetic:android-database-sqlcipher:3.5.6@aar'

    //Background Job Scheduling
    compile 'com.firebase:firebase-jobdispatcher-with-gcm-dep:0.5.2'

    //EventBus
    compile ('org.greenrobot:eventbus:3.0.0') {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
    }
    apt ('org.greenrobot:eventbus-annotation-processor:3.0.1') {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
        exclude module: 'firebase-core'
    }
}

apply plugin: 'com.google.gms.google-services'